#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 2

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        ret_kp: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to 0 &macro_param_1to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER>;

            label = "TO_LAYER_0";
        };

        bt_to_0: test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0>;
            label = "TEST";
        };

        bt_to_4: layer_to_android {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &to 1>;
            label = "LAYER_TO_ANDROID";
        };

        bt_to_1: bt_to_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 0>;
            label = "BT_TO_1";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&ret_kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_right_left: mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                      &kp W                 &kp E                       &kp R        &kp T                                            &kp Y        &kp U  &kp I      &kp O       &kp P
&mt LEFT_CONTROL A         &mt LEFT_SHIFT S      &kp D                       &kp F        &kp G                             &trans         &kp H        &kp J  &kp K      &kp L       &mt RIGHT_SHIFT SEMICOLON
&mt RIGHT_SHIFT SEMICOLON  &mt LEFT_SHIFT Z      &kp X                       &kp C        &kp V         &lt 6 B             &mkp MB1       &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_CONTROL SLASH
&mt LEFT_SHIFT LANG2       &kp LA(LEFT_CONTROL)  &mt LA(LEFT_COMMAND) LANG2  &lt 3 SPACE  &lt 5 ESCAPE  &mt LEFT_ALT TAB    &kp BACKSPACE  &lt 4 ENTER                                &mt LANG1 RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ANDROID {
            bindings = <
&kt Q                    &kt W                 &kt E         &kt R                   &kt T                                       &kt Y          &kt U  &kt I  &kt O      &kt P
&mt LEFT_CONTROL A       &mt LEFT_SHIFT S      &kt D         &kt F                   &kt G                     &trans            &trans         &kt H  &kt J  &kt K      &kt L
&mt RIGHT_ALT SEMICOLON  &mt LEFT_SHIFT Z      &kt X         &kt C                   &kt V        &lt 6 B      &trans            &trans         &kt N  &kt M  &kt COMMA  &kt PERIOD
&mt RIGHT_CONTROL SLASH  &mt LEFT_SHIFT LANG2  &kp LEFT_WIN  &mt LEFT_CONTROL LANG2  &lt 3 SPACE  &lt 5 ESC    &mt LEFT_ALT TAB  &kp BACKSPACE                           &lt 4 ENTER
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &mkp MB1  &mo 6   &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                            &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUMBER {
            bindings = <
&kp CARET     &kp EXCLAMATION          &kp AMPERSAND  &kp PIPE          &kp DOLLAR                              &kp AT_SIGN  &kp EQUAL             &kp PLUS      &kp ASTERISK  &kp PERCENT
&kp NUMBER_1  &mt LEFT_SHIFT NUMBER_2  &kp NUMBER_3   &kp NUMBER_4      &kp NUMBER_5                    &trans  &trans       &kp NUMBER_6          &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9
&kp NUMBER_0  &mt LEFT_SHIFT MINUS     &kp GRAVE      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE    &trans  &trans       &kp NON_US_BACKSLASH  &kp GRAVE     &trans        &trans
&trans        &trans                   &trans         &trans            &trans             &trans       &trans  &trans                                                         &kp RIGHT_COMMAND
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOL {
            bindings = <
&kp CARET          &kp EXCLAMATION              &kp AMPERSAND      &kp PIPE              &kp DOLLAR                                        &kp AT_SIGN  &kp EQUAL           &kp PLUS             &kp ASTERISK     &kp PERCENT
&mt LCTRL MINUS    &mt LEFT_SHIFT LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                     &trans  &trans       &kp LEFT_ARROW      &kp DOWN_ARROW       &kp UP_ARROW     &kp RIGHT_ARROW
&kp SINGLE_QUOTE   &mt LEFT_SHIFT MINUS         &kp HASH           &kp NON_US_BACKSLASH  &kp LEFT_BRACE         &kp RIGHT_BRACE    &trans  &trans       &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)  &kp LC(LS(TAB))  &kp LC(TAB)
&kp DOUBLE_QUOTES  &kp LEFT_ALT                 &trans             &trans                &lt_to_layer_0 2 A     &trans             &trans  &trans                                                                 &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SPECIAL {
            bindings = <
&kp LS(S)      &kp LS(D)  &kp LS(F15)  &kp LG(MINUS)         &kp LG(PLUS)                                   &bt_to_0  &bt_to_1       &bt BT_SEL 2   &bt BT_SEL 3   &bt_to_4
&trans         &trans     &kp LS(F16)  &kp LS(F17)           &kp LS(F18)                            &trans  &trans    &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3
&bt BT_DISC 4  &trans     &trans       &kp LS(LG(NUMBER_5))  &kp LG(LC(C))  &kp LS(LG(NUMBER_4))    &trans  &trans    &to 0          &to 1          &trans         &trans
&bt BT_CLR     &trans     &trans       &trans                &trans         &trans                  &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP LA(C_VOLUME_DOWN)>;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
